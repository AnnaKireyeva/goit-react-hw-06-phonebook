{"version":3,"sources":["Components/Filter/Filter.module.css","Components/ContactsList/ContactList.module.css","redux/phonebook-actions.js","redux/phonebook-selectors.js","Components/AddContactForm/AddContactForm.js","Components/Filter/Filter.js","Components/ContactsItem/ContactsItem.js","Components/ContactsList/ContactList.js","App.js","redux/phonebook-reducer.js","redux/store.js","index.js","Components/AddContactForm/AddContactForm.module.css","Components/ContactsItem/ContactsItem.module.css"],"names":["module","exports","phonebookActions","addContact","createAction","newContact","payload","id","shortid","generate","name","number","deleteContact","changeFilter","getContacts","state","contacts","items","getFilter","filter","filterContacts","normalizedFilter","toLowerCase","contact","includes","AddContactForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","find","toast","warning","className","styles","form","autoComplete","label","input","type","pattern","title","required","onChange","button","Filter","filterWrapper","filterLabel","filterInput","ContactsItem","onDeleteContact","contactsItem","contactWrapper","contactName","contactNumber","onClick","deleteBtn","ContactList","contactList","map","App","length","autoClose","position","theme","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,YAAc,4BAA4B,YAAc,8B,mBCAxHD,EAAOC,QAAU,CAAC,YAAc,mC,kMCsBjBC,EANU,CACvBC,WAfiBC,YAAa,gBAAgB,SAAAC,GAC9C,MAAO,CACLC,QAAS,CACPC,GAAIC,IAAQC,WACZC,KAAML,EAAWK,KACjBC,OAAQN,EAAWM,YAWvBC,cANoBR,YAAa,mBAOjCS,aALmBT,YAAa,0BCfrBU,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OACtCC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,SAASG,QACpCC,EAAiB,SAAAL,GAC5B,IAAMC,EAAWF,EAAYC,GAEvBM,EADSH,EAAUH,GACOO,cAChC,OAAON,EAASG,QAAO,SAAAI,GAAO,OAC5BA,EAAQb,KAAKY,cAAcE,SAASH,O,eCmFzBI,MAlFf,WACE,IAAMT,EAAWU,YAAYZ,GACvBa,EAAWC,cAEjB,EAAwBC,mBAAS,IAAjC,mBAAOnB,EAAP,KAAaoB,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOlB,EAAP,KAAeoB,EAAf,KAEMC,EAAe,SAAAC,GACnB,OAAQA,EAAEC,cAAcxB,MACtB,IAAK,OACHoB,EAAQG,EAAEC,cAAcC,OACxB,MACF,IAAK,SACHJ,EAAUE,EAAEC,cAAcC,OAC1B,MACF,QACE,SA0BAC,EAAQ,WACZN,EAAQ,IACRC,EAAU,KAGZ,OACE,uBAAMM,SA5Ba,SAAAJ,GAEnB,OADAA,EAAEK,iBAEAtB,EAASuB,MACP,SAAAhB,GAAO,OAAIA,EAAQb,KAAKY,gBAAkBZ,EAAKY,kBAGjDkB,IAAMC,QAAN,gBAAuB/B,EAAvB,kCACA0B,KAIEpB,EAASuB,MAAK,SAAAhB,GAAO,OAAIA,EAAQZ,OAAOW,gBAAkBX,MAC5D6B,IAAMC,QAAN,kBAAyB9B,EAAzB,kCACAyB,MAIFT,EAASzB,EAAiBC,WAAW,CAAEO,OAAMC,iBAC7CyB,MAS8BM,UAAWC,IAAOC,KAAMC,aAAa,MAAnE,UACE,wBAAOH,UAAWC,IAAOG,MAAzB,iBAEE,uBACEJ,UAAWC,IAAOI,MAClBC,KAAK,OACLtC,KAAK,OACLyB,MAAOzB,EACPuC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUpB,OAGd,wBAAOU,UAAWC,IAAOG,MAAzB,mBAEE,uBACEJ,UAAWC,IAAOI,MAClBC,KAAK,MACLtC,KAAK,SACLyB,MAAOxB,EACPsC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAUpB,OAGd,wBAAQgB,KAAK,SAASN,UAAWC,IAAOU,OAAxC,6B,iBCxDSC,EArBA,WACb,IAAMnB,EAAQT,YAAYR,GACpBS,EAAWC,cAEjB,OACE,qBAAKc,UAAWC,IAAOY,cAAvB,SACE,wBAAOb,UAAWC,IAAOa,YAAzB,kCAEE,uBACER,KAAK,OACLb,MAAOA,EACPiB,SAAU,SAAAnB,GAAC,OACTN,EAASzB,EAAiBW,aAAaoB,EAAEC,cAAcC,SAEzDO,UAAWC,IAAOc,oB,iCCSbC,EAzBM,SAAC,GAA2C,IAAzCnD,EAAwC,EAAxCA,GAAIG,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,OAAQgD,EAAsB,EAAtBA,gBACxC,OACE,qBAAIjB,UAAWC,IAAOiB,aAAtB,UACE,sBAAKlB,UAAWC,IAAOkB,eAAvB,UACE,oBAAGnB,UAAWC,IAAOmB,YAArB,UAAmCpD,EAAnC,OACA,mBAAGgC,UAAWC,IAAOoB,cAArB,SAAqCpD,OAGvC,wBACEqC,KAAK,SACLgB,QAAS,kBAAML,EAAgBpD,IAC/BmC,UAAWC,IAAOsB,UAHpB,wBCcSC,EAnBK,WAClB,IAAMlD,EAAWU,YAAYN,GACvBO,EAAWC,cAEjB,OACE,oBAAIc,UAAWC,IAAOwB,YAAtB,SACGnD,EAASoD,KAAI,gBAAG7D,EAAH,EAAGA,GAAIG,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,cAAC,EAAD,CAEEJ,GAAIA,EACJG,KAAMA,EACNC,OAAQA,EACRgD,gBAAiB,kBATD,SAAApD,GAAE,OAAIoB,EAASzB,EAAiBU,cAAcL,IASvCoD,CAAgBpD,KAJlCA,SCRA,SAAS8D,IACtB,IAAMrD,EAAWU,YAAYZ,GAC7B,OACE,sBAAK4B,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,uBACA,cAAC,EAAD,IAEA,oBAAIA,UAAU,QAAd,sBACqB,IAApB1B,EAASsD,OACR,cAAC,EAAD,IAEA,6DAGF,cAAC,EAAD,IACA,cAAC,IAAD,CAAgBC,UAAU,OAAOC,SAAS,YAAYC,MAAM,e,qEClB5DxD,EAAQyD,YAAc,IAAD,mBACxBxE,EAAiBC,YAAa,SAACY,EAAD,OAAUT,EAAV,EAAUA,QAAV,4BAA4BS,GAA5B,CAAmCT,OADzC,cAExBJ,EAAiBU,eAAgB,SAACG,EAAD,OAAUT,EAAV,EAAUA,QAAV,OAChCS,EAAMI,QAAO,SAAAI,GAAO,OAAIA,EAAQhB,KAAOD,QAHhB,IAMrBa,EAASuD,YAAc,GAAD,eACzBxE,EAAiBW,cAAe,SAAC8D,EAAD,YAAMrE,YAG1BsE,cAAgB,CAC7B3D,QACAE,WCDI0D,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGIC,EAAwB,CAC5BC,IAAK,WACLC,YACAC,UAAW,CAAC,WAGDC,EAAQC,YAAe,CAClCC,QAAS,CACP9E,SAAU+E,YAAeP,EAAuBQ,IAElDnB,WAAYA,EACZoB,UAAUC,IAGCC,EAAYC,YAAaR,G,QC9BtCS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAaY,QAAS,KAAML,UAAWA,EAAvC,SACE,cAAC,EAAD,UAINM,SAASC,eAAe,U,kBCf1B1G,EAAOC,QAAU,CAAC,KAAO,6BAA6B,MAAQ,8BAA8B,MAAQ,8BAA8B,OAAS,iC,kBCA3ID,EAAOC,QAAU,CAAC,aAAe,mCAAmC,eAAiB,qCAAqC,YAAc,kCAAkC,cAAgB,oCAAoC,UAAY,mC","file":"static/js/main.e943ea99.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__1oF3L\",\"filterLabel\":\"Filter_filterLabel__3es80\",\"filterInput\":\"Filter_filterInput__PU_GX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1Flh6\"};","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', newContact => {\r\n  return {\r\n    payload: {\r\n      id: shortid.generate(),\r\n      name: newContact.name,\r\n      number: newContact.number,\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst phonebookActions = {\r\n  addContact,\r\n  deleteContact,\r\n  changeFilter,\r\n};\r\n\r\nexport default phonebookActions;\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const filterContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport styles from './AddContactForm.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport phonebookActions from '../../redux/phonebook-actions';\r\nimport { getContacts } from '../../redux/phonebook-selectors';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction AddContactForm() {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    switch (e.currentTarget.name) {\r\n      case 'name':\r\n        setName(e.currentTarget.value);\r\n        break;\r\n      case 'number':\r\n        setNumber(e.currentTarget.value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (\r\n      contacts.find(\r\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n      )\r\n    ) {\r\n      toast.warning(`Name '${name}' is already in contacts`);\r\n      reset();\r\n      return;\r\n    }\r\n\r\n    if (contacts.find(contact => contact.number.toLowerCase() === number)) {\r\n      toast.warning(`Number '${number}' is already in contacts`);\r\n      reset();\r\n      return;\r\n    }\r\n\r\n    dispatch(phonebookActions.addContact({ name, number }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.form} autoComplete=\"off\">\r\n      <label className={styles.label}>\r\n        Name\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label className={styles.label}>\r\n        Number\r\n        <input\r\n          className={styles.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={styles.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddContactForm;\r\n","import React from 'react';\r\nimport styles from './Filter.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/phonebook-selectors';\r\nimport phonebookActions from '../../redux/phonebook-actions';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={styles.filterWrapper}>\r\n      <label className={styles.filterLabel}>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={e =>\r\n            dispatch(phonebookActions.changeFilter(e.currentTarget.value))\r\n          }\r\n          className={styles.filterInput}\r\n        ></input>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactsItem.module.css';\r\n\r\nconst ContactsItem = ({ id, name, number, onDeleteContact }) => {\r\n  return (\r\n    <li className={styles.contactsItem}>\r\n      <div className={styles.contactWrapper}>\r\n        <p className={styles.contactName}>{name}:</p>\r\n        <p className={styles.contactNumber}>{number}</p>\r\n      </div>\r\n\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n        className={styles.deleteBtn}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\nContactsItem.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactsItem;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styles from './ContactList.module.css';\r\nimport ContactsItem from '../ContactsItem/ContactsItem';\r\nimport phonebookActions from '../../redux/phonebook-actions';\r\nimport { filterContacts } from '../../redux/phonebook-selectors';\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(filterContacts);\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = id => dispatch(phonebookActions.deleteContact(id));\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactsItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={() => onDeleteContact(id)}\r\n        ></ContactsItem>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import './App.css';\nimport { ToastContainer } from 'react-toastify';\nimport AddContactForm from './Components/AddContactForm';\nimport Filter from './Components/Filter/Filter';\nimport ContactList from './Components/ContactsList/ContactList';\nimport { useSelector } from 'react-redux';\nimport { getContacts } from './redux/phonebook-selectors';\nexport default function App() {\n  const contacts = useSelector(getContacts);\n  return (\n    <div className=\"App\">\n      <h1 className=\"Title\">Phonebook</h1>\n      <AddContactForm />\n\n      <h2 className=\"Title\">Contacts</h2>\n      {contacts.length !== 0 ? (\n        <Filter />\n      ) : (\n        <h3>Your contacts list is empty</h3>\n      )}\n\n      <ContactList />\n      <ToastContainer autoClose=\"3000\" position=\"top-right\" theme=\"colored\" />\n    </div>\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport phonebookActions from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n  [phonebookActions.addContact]: (state, { payload }) => [...state, payload],\r\n  [phonebookActions.deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [phonebookActions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from './phonebook-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, phonebookReducer),\r\n  },\r\n  middleware: middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddContactForm_form__3qqWH\",\"label\":\"AddContactForm_label__jg7xC\",\"input\":\"AddContactForm_input__1-0P4\",\"button\":\"AddContactForm_button__2JAS5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsItem\":\"ContactsItem_contactsItem__3RouD\",\"contactWrapper\":\"ContactsItem_contactWrapper__2FIVH\",\"contactName\":\"ContactsItem_contactName__3P_Nk\",\"contactNumber\":\"ContactsItem_contactNumber__1PDOM\",\"deleteBtn\":\"ContactsItem_deleteBtn__4zvDw\"};"],"sourceRoot":""}